clear all, close all,clc;
%% Import data from spreadsheet
% Script for importing data from the following spreadsheet:
%
%    Workbook: C:\Users\Rohit Suresh\Desktop\ISU Academics\Fall 2017\IE-560 Engg risk analysis\Term Paper\rainfall.xlsx
%    Worksheet: Sheet1
%
% To extend the code for use with different selected data or a different
% spreadsheet, generate a function instead of a script.

% Auto-generated by MATLAB on 2017/12/07 20:36:37

%% Import the data
[~, ~, raw] = xlsread('C:\Users\Rohit Suresh\Desktop\ISU Academics\Fall 2017\IE-560 Engg risk analysis\Term Paper\rainfall.xlsx','Sheet1','G4:K54');
stringVectors = string(raw(:,2));
stringVectors(ismissing(stringVectors)) = '';
raw = raw(:,[1,3,4,5]);

%% Create output variable
data = reshape([raw{:}],size(raw));

%% Create table
rainfall = table;

%% Allocate imported array to column variable names
rainfall.daysofrain = data(:,1);
rainfall.city = stringVectors(:,1);
rainfall.inches = data(:,2);
rainfall.mm = data(:,3);
rainfall.Avgininchesyearly = data(:,4);

%% Clear temporary variables
clearvars data raw stringVectors;

%% Import data from spreadsheet
% Script for importing data from the following spreadsheet:
%
%    Workbook: C:\Users\Rohit Suresh\Desktop\ISU Academics\Fall 2017\IE-560 Engg risk analysis\Term Paper\city population.xlsx
%    Worksheet: Sheet1
%
% To extend the code for use with different selected data or a different
% spreadsheet, generate a function instead of a script.

% Auto-generated by MATLAB on 2017/12/07 21:14:02

%% Import the data
[~, ~, raw] = xlsread('C:\Users\Rohit Suresh\Desktop\ISU Academics\Fall 2017\IE-560 Engg risk analysis\Term Paper\city population.xlsx','Sheet1','F4:F75');

%% Create output variable
pop = reshape([raw{:}],size(raw));

%% Clear temporary variables
clearvars raw;
%% Modeling of Factors

%rainfall---kappa distribution
city_avg_rain_data = rainfall.Avgininchesyearly(1:length(rainfall.Avgininchesyearly));
avg_daily_rainfall_pd = fitdist(city_avg_rain_data,'normal');
avg_daily_rainfall_pd = truncate(avg_daily_rainfall_pd,0,10^50);

%no_of_rainy_days----MODEL WITH INERTIA
avg_daily_rainfall = random(avg_daily_rainfall_pd,1,1);

%rainy days %explore seasons
rainy_days_pd = makedist('uniform','lower',0,'upper',20);
%flood category----affected by rainfall----minor,modetare,major,record flooding
%metro area population----only above 800k were taken
%----decides type of metro area----Tier 1(NYC, LA, Chicago),Tier 2(SFO, San Diego, Dallas, Cincinnati), Tier 3(Des Moines, Omaha etc)
%% Distributions

%city population distribution
pop_dist=fitdist(pop,'Exponential');
pop_dist=truncate(pop_dist,800000,10^50);

%highrises in the city
hrtier1 = truncate(makedist('Normal','mu',2787.3,'sigma',2633.4),0,10^50);
hrtier2 = truncate(makedist('Normal','mu',136.3,'sigma',55.98),0,10^50);
hrtier3 = truncate(makedist('Normal','mu',28.20,'sigma',27.16),0,10^50);
hrtier4 = truncate(makedist('Normal','mu',6.94,'sigma',11.10),0,10^50);

%houses in the city
housetier1 = truncate(makedist('Normal','mu',4183011,'sigma',855399),0,10^50);
housetier2 = truncate(makedist('Normal','mu',1699191,'sigma',300091),0,10^50);
housetier3 = truncate(makedist('Normal','mu',568274,'sigma',269271),0,10^50);
housetier4 = truncate(makedist('Normal','mu',222122,'sigma',14168),0,10^50);

%general concrete buildings in the city
gctier1 = truncate(makedist('Normal','mu',25098,'sigma',5132),0,10^50);
gctier2 = truncate(makedist('Normal','mu',10195,'sigma',1800),0,10^50);
gctier3 = truncate(makedist('Normal','mu',3410,'sigma',1616),0,10^50);
gctier4 = truncate(makedist('Normal','mu',1333,'sigma',85),0,10^50);

%flood categories and percent damage to each type of building
%negligible flooding
prc_hr_pd_nf = truncate(makedist('normal','mu',5.06,'sigma',1.5),0,100);
prc_gc_pd_nf = truncate(makedist('normal','mu',8.51,'sigma',12.3),0,100);
prc_hs_pd_nf = truncate(makedist('normal','mu',8.69,'sigma',5.65),0,100);
%minor flooding
prc_hr_pd_minf = truncate(makedist('normal','mu',12.5,'sigma',6.5),0,100);
prc_gc_pd_minf = truncate(makedist('normal','mu',34.51,'sigma',24.51),0,100);
prc_hs_pd_minf = truncate(makedist('normal','mu',15.02,'sigma',6.68),0,100); 
%moderate flooding
prc_hr_pd_modf = truncate(makedist('normal','mu',19.56,'sigma',8.45),0,100);
prc_gc_pd_modf = truncate(makedist('normal','mu',50.79,'sigma',30.65),0,100);
prc_hs_pd_modf = truncate(makedist('normal','mu',24.86,'sigma',10.49),0,100);
%major flooding
prc_hr_pd_majf = truncate(makedist('normal','mu',32.56,'sigma',12.37),0,100);
prc_gc_pd_majf = truncate(makedist('normal','mu',59.20,'sigma',26.31),0,100);
prc_hs_pd_majf = truncate(makedist('normal','mu',40.76,'sigma',15.21),0,100);
%record flooding
prc_hr_pd_rf = truncate(makedist('normal','mu',46.84,'sigma',10.33),0,100);
prc_gc_pd_rf = truncate(makedist('normal','mu',77.30,'sigma',20.92),0,100);
prc_hs_pd_rf = truncate(makedist('normal','mu',54.73,'sigma',18.1),0,100);

%minimum stage
min_stage_pd = truncate(makedist('normal','mu',4,'sigma',0.8),0,100);
%inundation factor
if_pd = truncate(makedist('normal','mu',5.5,'sigma',3.5),0.5,15);

%% Monte Carlo Simulation
nsim=100000;

for i=1:nsim

%population of the city
population = random(pop_dist,1,1);

%type of city----decides distribution of no. of buildings
if population <= 10^6 %Tier 4
    %types of buildings----concrete buildings(skyscrapers+offices+educational+warehouses),wooden(residential)
    highrises = ceil(random(hrtier4,1,1));
    gen_concrete = ceil(random(gctier4,1,1));
    houses = ceil(random(housetier4,1,1));
elseif 1000000 < population <= 5000000 %Tier 3
    highrises = ceil(random(hrtier3,1,1));
    gen_concrete = ceil(random(gctier3,1,1));
    houses = ceil(random(housetier3,1,1));
elseif 5000000 <= population <= 8000000 %Tier 2
    highrises = ceil(random(hrtier2,1,1));
    gen_concrete = ceil(random(gctier2,1,1))
    houses = ceil(random(housetier2,1,1));
elseif population > 8000000 %Tier 1
    highrises = ceil(random(hrtier1,1,1));
    gen_concrete = ceil(random(gctier1,1,1))
    houses = ceil(random(housetier1,1,1));
end

%continuously rainy days
rainy_days = ceil(random(rainy_days_pd,1,1));
total_rain = avg_daily_rainfall*rainy_days; %total rainfall in inches
%flood chance
%drain failure probabilities
drain_working = 0;
if total_rain <= 1
    drain_working = binornd(1,0.97,1,1); %0.03 chance of failure
elseif (1 < total_rain) && (total_rain <= 4)
    drain_working = binornd(1,0.85,1,1); %0.15 chance of failure
elseif (4 < total_rain) && (total_rain <= 6)
    drain_working = binornd(1,0.55,1,1);%0.45 chance of failure
elseif total_rain >= 6 
    drain_working = binornd(1,0.25,1,1);%0.75 chance of failure
end
%flood because of upstream rain

%flood depth
inundation_factor = random(if_pd);
if drain_working == 0 %drain has failed
    depth = total_rain*inundation_factor;
else
    depth = 0; %look into this
end

%flood category

min_stage = random(min_stage_pd);

if depth <= min_stage %negligible flooding
    prc_hr = random(prc_hr_pd_nf)/100;
    prc_gc = random(prc_gc_pd_nf)/100;
    prc_hs = random(prc_hs_pd_nf)/100;
    damage(i) = highrises*34371.1*prc_hr*50 + gen_concrete*10*2109.68*prc_gc*15 + houses*2109.68*prc_hs*8.5;
elseif (min_stage < depth) && (depth <= min_stage+7) %minor flooding
    prc_hr = random(prc_hr_pd_minf)/100;
    prc_gc = random(prc_gc_pd_minf)/100;
    prc_hs = random(prc_hs_pd_minf)/100;
    damage(i) = highrises*34371.1*prc_hr*50 + gen_concrete*10*2109.68*prc_gc*15 + houses*2109.68*prc_hs*8.5;
elseif (min_stage+7 < depth) && (depth <= min_stage+16) %moderate flooding
    prc_hr = random(prc_hr_pd_modf)/100;
    prc_gc = random(prc_gc_pd_modf)/100;
    prc_hs = random(prc_hs_pd_modf)/100;
    damage(i) = highrises*34371.1*prc_hr*50 + gen_concrete*10*2109.68*prc_gc*15 + houses*2109.68*prc_hs*8.5;
elseif (min_stage+16 < depth) && (depth <= min_stage+22) %major flooding 
    prc_hr = random(prc_hr_pd_majf)/100;
    prc_gc = random(prc_gc_pd_majf)/100;
    prc_hs = random(prc_hs_pd_majf)/100;
    damage(i) = highrises*34371.1*prc_hr*50 + gen_concrete*10*2109.68*prc_gc*15 + houses*2109.68*prc_hs*8.5;
elseif depth > min_stage+22 %record flooding
    prc_hr = random(prc_hr_pd_rf)/100;
    prc_gc = random(prc_gc_pd_rf)/100;
    prc_hs = random(prc_hs_pd_rf)/100;
    damage(i) = highrises*34371.1*prc_hr*50 + gen_concrete*10*2109.68*prc_gc*15 + houses*2109.68*prc_hs*8.5;
end
end
dam_sort = sort(damage);
dam_sort = dam_sort/(10^9);
trials = 1:nsim;
cdf = trials/nsim;
risk = 1-cdf;
figure;
plot(dam_sort,risk)
title('Risk curve for Property Damage to a City due to Rain induced Flood')
xlabel('Damage in Billions of USD/Event')
ylabel('Risk')
